apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: employees
  description: General Employees Group
spec:
  type: team
  profile:
    displayName: General Employees Group
    email: escoriza@gmail.com
  children: []
  members: [escoriza]
---  
apiVersion: backstage.io/v1alpha1
kind: User
metadata:
  name: escoriza
spec:
  profile:
    displayName: Jose Antonio Escoriza
    email: escoriza@gmail.com
    picture: https://0.gravatar.com/avatar/5dae9ba17d883766d850a0bf64d4beba3e1ae834309f2fde1c10a58a6c60f43f?size=512
  memberOf: [employees]
---  
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: spring-catalogue-test
  description: Example Catalog import.
  # Example for optional annotations
  annotations:
    backstage.io/techdocs-ref: dir:./docs
    backstage.io/source-location: url:https://https://github.com/escoriza-altia/spring-catalogue-test/tree/master/containerizeSpring/
    github.com/project-slug: escoriza-altia/spring-catalogue-test
    github.com/user-login: escoriza
    vault.io/secrets-path: test/backstage
spec:
  type: service
  owner: user:escoriza
  lifecycle: experimental
---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta3-demo
  title: Test Action template
  description: scaffolder v1beta3 template demo
spec:
  owner: user:escoriza
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}

    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./community
        url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
